{"version":3,"sources":["components/filter/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItems.js","components/Expenses/ExpenseList.js","components/Cards/ChartBar.js","components/Cards/Charts.js","components/Expenses/ExpenseCharts.js","components/Expenses/Expense.js","components/NewExpense/Forms.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","onChange","e","FilterYear","target","OnchangingFilter","Card","classes","children","ExpenseDate","month","date","toLocaleDateString","day","year","getFullYear","ExpenseItems","title","amount","ExpenseList","items","length","map","expense","id","ChartBar","BarHeight","maxValue","Math","round","style","height","label","Charts","values","dataPoints","points","maximumValue","max","ExpenseCharts","ChartdataPoints","expenses","getMonth","Expense","useState","FilterValue","setFilter","filterExpenses","filter","toString","Filteryear","console","log","Forms","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","NewExpense","Date","onSaveData","type","onClick","onCancel","isEditing","EditingChange","random","ExpenseData","RandomData","App","newExpense","setExpense","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.977ae6a7.chunk.js","sourcesContent":["import \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const FilterHandler = (e) => {\r\n    const FilterYear = e.target.value;\r\n    props.OnchangingFilter(FilterYear);\r\n\r\n    // console.log(FilterValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.value} onChange={FilterHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleDateString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleDateString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItems.css\";\r\nimport Card from \"../UI/Card\";\r\n// import { useState } from \"react\";\r\n\r\nconst ExpenseItems = (props) => {\r\n  // const [title, setTitle] = useState(props.title);\r\n  // const clickHandler = () => {\r\n  //   setTitle(\"Updated\");\r\n  //   console.log(title);\r\n  // };\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2 className=\"\">{props.title}</h2>\r\n          <div className=\"expense-item__price\">{props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItems;\r\n","import \"./ExpenseList.css\";\r\nimport ExpenseItems from \"./ExpenseItems\";\r\n\r\nconst ExpenseList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItems\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let BarHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    BarHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{ height: BarHeight }}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Charts.css\";\r\n\r\nconst Charts = (props) => {\r\n  const values = props.dataPoints.map((points) => points.value);\r\n  const maximumValue = Math.max(...values);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((points) => (\r\n        <ChartBar\r\n          key={points.label}\r\n          value={points.value}\r\n          label={points.label}\r\n          maxValue={maximumValue}\r\n        ></ChartBar>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;\r\n","import Charts from \"../Cards/Charts\";\r\n\r\nconst ExpenseCharts = (props) => {\r\n  const ChartdataPoints = [\r\n    { label: \"jan\", value: 0 },\r\n    { label: \"feb\", value: 0 },\r\n    { label: \"mar\", value: 0 },\r\n    { label: \"apr\", value: 0 },\r\n    { label: \"may\", value: 0 },\r\n    { label: \"jun\", value: 0 },\r\n    { label: \"july\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"sep\", value: 0 },\r\n    { label: \"oct\", value: 0 },\r\n    { label: \"nov\", value: 0 },\r\n    { label: \"dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const month = expense.date.getMonth();\r\n    ChartdataPoints[month].value += expense.amount;\r\n  }\r\n  //   console.log(ChartdataPoints[1].value);\r\n\r\n  return <Charts dataPoints={ChartdataPoints} />;\r\n};\r\n\r\nexport default ExpenseCharts;\r\n","import \"./Expense.css\";\r\nimport ExpensesFilter from \"../filter/ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport { useState } from \"react\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport ExpenseCharts from \"./ExpenseCharts\";\r\n\r\nconst Expense = (props) => {\r\n  const [FilterValue, setFilter] = useState(\"2021\");\r\n  const changeFilterHandler = (Filteryear) => {\r\n    const filter = Filteryear;\r\n    console.log(filter);\r\n    setFilter(filter);\r\n  };\r\n\r\n  const filterExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === FilterValue;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          value={FilterValue}\r\n          OnchangingFilter={changeFilterHandler}\r\n        ></ExpensesFilter>\r\n        <ExpenseCharts expenses={filterExpenses} />\r\n        <ExpenseList items={filterExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expense;\r\n","import { useState } from \"react/cjs/react.development\";\r\nimport \"./Forms.css\";\r\n\r\nconst Forms = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const TitleHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n  const AmountHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n\r\n  const DateHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const SubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const NewExpense = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveData(NewExpense);\r\n\r\n    setEnteredDate(\"\");\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    // console.log(NewExpense);\r\n  };\r\n  return (\r\n    <form onSubmit={SubmitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            value={enteredTitle}\r\n            onChange={TitleHandler}\r\n            type=\"text\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            value={enteredAmount}\r\n            onChange={AmountHandler}\r\n            type=\"number\"\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input value={enteredDate} onChange={DateHandler} type=\"date\"></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n","import { useState } from \"react\";\r\nimport Forms from \"./Forms\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, EditingChange] = useState();\r\n  const ExpenseDataHandler = (expense) => {\r\n    const expenses = {\r\n      ...expense,\r\n      id: Math.random(),\r\n    };\r\n    EditingChange(false);\r\n    props.ExpenseData(expenses);\r\n  };\r\n\r\n  const cancelExpenseHandler = () => {\r\n    EditingChange(false);\r\n  };\r\n\r\n  const AddExpenseHandler = () => {\r\n    EditingChange(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={AddExpenseHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <Forms\r\n          onSaveData={ExpenseDataHandler}\r\n          onCancel={cancelExpenseHandler}\r\n        ></Forms>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","// import ExpenseItems from \"./components/ExpenseItems\";\nimport { useState } from \"react\";\nimport Expense from \"./components/Expenses/Expense\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst RandomData = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [newExpense, setExpense] = useState(RandomData);\n\n  const expensesDataHandler = (expense) => {\n    setExpense((prevExpense) => {\n      return [expense, ...prevExpense];\n    });\n  };\n  return (\n    <div>\n      <NewExpense ExpenseData={expensesDataHandler} />\n      <Expense items={newExpense}></Expense>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}